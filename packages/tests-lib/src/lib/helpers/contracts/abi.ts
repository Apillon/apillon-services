export const evmGenericNftAbi =
  '[{"type": "constructor", "inputs": [{"name": "_name", "type": "string", "internalType": "string"}, {"name": "_symbol", "type": "string", "internalType": "string"}, {"name": "_initBaseURI", "type": "string", "internalType": "string"}, {"name": "_baseExtension", "type": "string", "internalType": "string"}, {"name": "_settings", "type": "bool[]", "internalType": "bool[]"}, {"name": "_pricePerMint", "type": "uint256", "internalType": "uint256"}, {"name": "_dropStart", "type": "uint256", "internalType": "uint256"}, {"name": "_maxSupply", "type": "uint256", "internalType": "uint256"}, {"name": "_reserve", "type": "uint256", "internalType": "uint256"}, {"name": "_royaltiesAddress", "type": "address", "internalType": "address"}, {"name": "_royaltiesFees", "type": "uint256", "internalType": "uint256"}], "stateMutability": "nonpayable"}, {"name": "Approval", "type": "event", "inputs": [{"name": "owner", "type": "address", "indexed": true, "internalType": "address"}, {"name": "approved", "type": "address", "indexed": true, "internalType": "address"}, {"name": "tokenId", "type": "uint256", "indexed": true, "internalType": "uint256"}], "anonymous": false}, {"name": "ApprovalForAll", "type": "event", "inputs": [{"name": "owner", "type": "address", "indexed": true, "internalType": "address"}, {"name": "operator", "type": "address", "indexed": true, "internalType": "address"}, {"name": "approved", "type": "bool", "indexed": false, "internalType": "bool"}], "anonymous": false}, {"name": "OwnershipTransferred", "type": "event", "inputs": [{"name": "previousOwner", "type": "address", "indexed": true, "internalType": "address"}, {"name": "newOwner", "type": "address", "indexed": true, "internalType": "address"}], "anonymous": false}, {"name": "Transfer", "type": "event", "inputs": [{"name": "from", "type": "address", "indexed": true, "internalType": "address"}, {"name": "to", "type": "address", "indexed": true, "internalType": "address"}, {"name": "tokenId", "type": "uint256", "indexed": true, "internalType": "uint256"}], "anonymous": false}, {"name": "allTokens", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "uint256[]", "internalType": "uint256[]"}], "stateMutability": "view"}, {"name": "approve", "type": "function", "inputs": [{"name": "to", "type": "address", "internalType": "address"}, {"name": "tokenId", "type": "uint256", "internalType": "uint256"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "balanceOf", "type": "function", "inputs": [{"name": "owner", "type": "address", "internalType": "address"}], "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}], "stateMutability": "view"}, {"name": "baseExtension", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "string", "internalType": "string"}], "stateMutability": "view"}, {"name": "burn", "type": "function", "inputs": [{"name": "tokenId", "type": "uint256", "internalType": "uint256"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "dropStart", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}], "stateMutability": "view"}, {"name": "getApproved", "type": "function", "inputs": [{"name": "tokenId", "type": "uint256", "internalType": "uint256"}], "outputs": [{"name": "", "type": "address", "internalType": "address"}], "stateMutability": "view"}, {"name": "getRoyaltyPercentage", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}], "stateMutability": "view"}, {"name": "getRoyaltyRecipient", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "address", "internalType": "address"}], "stateMutability": "view"}, {"name": "isApprovedForAll", "type": "function", "inputs": [{"name": "owner", "type": "address", "internalType": "address"}, {"name": "operator", "type": "address", "internalType": "address"}], "outputs": [{"name": "", "type": "bool", "internalType": "bool"}], "stateMutability": "view"}, {"name": "isAutoIncrement", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "bool", "internalType": "bool"}], "stateMutability": "view"}, {"name": "isDrop", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "bool", "internalType": "bool"}], "stateMutability": "view"}, {"name": "isRevokable", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "bool", "internalType": "bool"}], "stateMutability": "view"}, {"name": "isSoulbound", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "bool", "internalType": "bool"}], "stateMutability": "view"}, {"name": "maxSupply", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}], "stateMutability": "view"}, {"name": "mint", "type": "function", "inputs": [{"name": "to", "type": "address", "internalType": "address"}, {"name": "numToMint", "type": "uint256", "internalType": "uint256"}], "outputs": [], "stateMutability": "payable"}, {"name": "mintCounter", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}], "stateMutability": "view"}, {"name": "mintIds", "type": "function", "inputs": [{"name": "to", "type": "address", "internalType": "address"}, {"name": "numToMint", "type": "uint256", "internalType": "uint256"}, {"name": "idsToMint", "type": "uint256[]", "internalType": "uint256[]"}], "outputs": [], "stateMutability": "payable"}, {"name": "name", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "string", "internalType": "string"}], "stateMutability": "view"}, {"name": "owner", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "address", "internalType": "address"}], "stateMutability": "view"}, {"name": "ownerMint", "type": "function", "inputs": [{"name": "to", "type": "address", "internalType": "address"}, {"name": "numToMint", "type": "uint256", "internalType": "uint256"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "ownerMintIds", "type": "function", "inputs": [{"name": "to", "type": "address", "internalType": "address"}, {"name": "numToMint", "type": "uint256", "internalType": "uint256"}, {"name": "idsToMint", "type": "uint256[]", "internalType": "uint256[]"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "ownerOf", "type": "function", "inputs": [{"name": "tokenId", "type": "uint256", "internalType": "uint256"}], "outputs": [{"name": "", "type": "address", "internalType": "address"}], "stateMutability": "view"}, {"name": "pricePerMint", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}], "stateMutability": "view"}, {"name": "renounceOwnership", "type": "function", "inputs": [], "outputs": [], "stateMutability": "nonpayable"}, {"name": "reserve", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}], "stateMutability": "view"}, {"name": "royaltiesAddress", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "address", "internalType": "address"}], "stateMutability": "view"}, {"name": "royaltiesFees", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}], "stateMutability": "view"}, {"name": "royaltyInfo", "type": "function", "inputs": [{"name": "", "type": "uint256", "internalType": "uint256"}, {"name": "value", "type": "uint256", "internalType": "uint256"}], "outputs": [{"name": "receiver", "type": "address", "internalType": "address"}, {"name": "royaltyAmount", "type": "uint256", "internalType": "uint256"}], "stateMutability": "view"}, {"name": "safeTransferFrom", "type": "function", "inputs": [{"name": "from", "type": "address", "internalType": "address"}, {"name": "to", "type": "address", "internalType": "address"}, {"name": "tokenId", "type": "uint256", "internalType": "uint256"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "safeTransferFrom", "type": "function", "inputs": [{"name": "from", "type": "address", "internalType": "address"}, {"name": "to", "type": "address", "internalType": "address"}, {"name": "tokenId", "type": "uint256", "internalType": "uint256"}, {"name": "data", "type": "bytes", "internalType": "bytes"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "setApprovalForAll", "type": "function", "inputs": [{"name": "operator", "type": "address", "internalType": "address"}, {"name": "approved", "type": "bool", "internalType": "bool"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "setBaseExtension", "type": "function", "inputs": [{"name": "_newBaseExtension", "type": "string", "internalType": "string"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "setBaseURI", "type": "function", "inputs": [{"name": "_newBaseURI", "type": "string", "internalType": "string"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "setDropStart", "type": "function", "inputs": [{"name": "_dropStart", "type": "uint256", "internalType": "uint256"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "supportsInterface", "type": "function", "inputs": [{"name": "interfaceId", "type": "bytes4", "internalType": "bytes4"}], "outputs": [{"name": "", "type": "bool", "internalType": "bool"}], "stateMutability": "view"}, {"name": "symbol", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "string", "internalType": "string"}], "stateMutability": "view"}, {"name": "tokenByIndex", "type": "function", "inputs": [{"name": "index", "type": "uint256", "internalType": "uint256"}], "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}], "stateMutability": "view"}, {"name": "tokenOfOwnerByIndex", "type": "function", "inputs": [{"name": "owner", "type": "address", "internalType": "address"}, {"name": "index", "type": "uint256", "internalType": "uint256"}], "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}], "stateMutability": "view"}, {"name": "tokenURI", "type": "function", "inputs": [{"name": "tokenId", "type": "uint256", "internalType": "uint256"}], "outputs": [{"name": "", "type": "string", "internalType": "string"}], "stateMutability": "view"}, {"name": "totalSupply", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}], "stateMutability": "view"}, {"name": "transferFrom", "type": "function", "inputs": [{"name": "from", "type": "address", "internalType": "address"}, {"name": "to", "type": "address", "internalType": "address"}, {"name": "tokenId", "type": "uint256", "internalType": "uint256"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "transferOwnership", "type": "function", "inputs": [{"name": "newOwner", "type": "address", "internalType": "address"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "updateRoyaltyRecipient", "type": "function", "inputs": [{"name": "newRoyaltyRecipient", "type": "address", "internalType": "address"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "walletOfOwner", "type": "function", "inputs": [{"name": "_owner", "type": "address", "internalType": "address"}], "outputs": [{"name": "", "type": "uint256[]", "internalType": "uint256[]"}], "stateMutability": "view"}, {"name": "withdrawRaised", "type": "function", "inputs": [{"name": "to", "type": "address", "internalType": "address"}, {"name": "amount", "type": "uint256", "internalType": "uint256"}], "outputs": [], "stateMutability": "nonpayable"}]';

export const evmNestableNftAbi =
  '["constructor(string _name, string _symbol, string _initBaseURI, string _baseExtension, bool[] _settings, uint256 _dropStart, uint256 _reserve, tuple(address royaltyRecipient, uint16 royaltyPercentageBps, uint256 maxSupply, uint256 pricePerMint) _data)", "error ERC721AddressZeroIsNotaValidOwner()", "error ERC721ApprovalToCurrentOwner()", "error ERC721ApproveCallerIsNotOwnerNorApprovedForAll()", "error ERC721ApproveToCaller()", "error ERC721InvalidTokenId()", "error ERC721MintToTheZeroAddress()", "error ERC721NotApprovedOrOwner()", "error ERC721TokenAlreadyMinted()", "error ERC721TransferFromIncorrectOwner()", "error ERC721TransferToNonReceiverImplementer()", "error ERC721TransferToTheZeroAddress()", "error RMRKChildAlreadyExists()", "error RMRKChildIndexOutOfRange()", "error RMRKIdZeroForbidden()", "error RMRKIsNotContract()", "error RMRKMaxPendingChildrenReached()", "error RMRKMaxRecursiveBurnsReached(address childContract, uint256 childId)", "error RMRKMintOverMax()", "error RMRKMintToNonRMRKNestableImplementer()", "error RMRKMintZero()", "error RMRKNestableTooDeep()", "error RMRKNestableTransferToDescendant()", "error RMRKNestableTransferToNonRMRKNestableImplementer()", "error RMRKNestableTransferToSelf()", "error RMRKNewContributorIsZeroAddress()", "error RMRKNewOwnerIsZeroAddress()", "error RMRKNotApprovedOrDirectOwner()", "error RMRKNotOwner()", "error RMRKPendingChildIndexOutOfRange()", "error RMRKRoyaltiesTooHigh()", "error RMRKUnexpectedChildId()", "error RMRKUnexpectedNumberOfChildren()", "error RMRKWrongValueSent()", "event AllChildrenRejected(uint256 indexed tokenId)", "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)", "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)", "event ChildAccepted(uint256 indexed tokenId, uint256 childIndex, address indexed childAddress, uint256 indexed childId)", "event ChildProposed(uint256 indexed tokenId, uint256 childIndex, address indexed childAddress, uint256 indexed childId)", "event ChildTransferred(uint256 indexed tokenId, uint256 childIndex, address indexed childAddress, uint256 indexed childId, bool fromPending, bool toZero)", "event ContributorUpdate(address indexed contributor, bool isContributor)", "event NestTransfer(address indexed from, address indexed to, uint256 fromTokenId, uint256 toTokenId, uint256 indexed tokenId)", "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)", "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)", "function RMRK_INTERFACE() view returns (bytes4)", "function VERSION() view returns (string)", "function acceptChild(uint256 parentId, uint256 childIndex, address childAddress, uint256 childId)", "function addChild(uint256 parentId, uint256 childId, bytes data)", "function allTokens() view returns (uint256[])", "function approve(address to, uint256 tokenId)", "function balanceOf(address owner) view returns (uint256)", "function baseExtension() view returns (string)", "function burn(uint256 tokenId, uint256 maxChildrenBurns) returns (uint256)", "function childOf(uint256 parentId, uint256 index) view returns (tuple(uint256 tokenId, address contractAddress))", "function childrenOf(uint256 parentId) view returns (tuple(uint256 tokenId, address contractAddress)[])", "function collectionMetadata() view returns (string)", "function directOwnerOf(uint256 tokenId) view returns (address, uint256, bool)", "function dropStart() view returns (uint256)", "function getApproved(uint256 tokenId) view returns (address)", "function getRoyaltyPercentage() view returns (uint256)", "function getRoyaltyRecipient() view returns (address)", "function isApprovedForAll(address owner, address operator) view returns (bool)", "function isContributor(address contributor) view returns (bool)", "function isDrop() view returns (bool)", "function isRevokable() view returns (bool)", "function isSoulbound() view returns (bool)", "function lastId() view returns (uint256)", "function manageContributor(address contributor, bool grantRole)", "function maxSupply() view returns (uint256)", "function mint(address to, uint256 numToMint) payable returns (uint256)", "function name() view returns (string)", "function nestMint(address to, uint256 numToMint, uint256 destinationId) payable returns (uint256)", "function nestTransferFrom(address from, address to, uint256 tokenId, uint256 destinationId, bytes data)", "function owner() view returns (address)", "function ownerMint(address _receiver, uint16 _numToMint)", "function ownerNestMint(address _receiver, uint16 _numToMint, uint256 destinationId)", "function ownerOf(uint256 tokenId) view returns (address)", "function pendingChildOf(uint256 parentId, uint256 index) view returns (tuple(uint256 tokenId, address contractAddress))", "function pendingChildrenOf(uint256 parentId) view returns (tuple(uint256 tokenId, address contractAddress)[])", "function pricePerMint() view returns (uint256)", "function rejectAllChildren(uint256 tokenId, uint256 maxRejections)", "function renounceOwnership()", "function reserve() view returns (uint256)", "function royaltyInfo(uint256 tokenId, uint256 salePrice) view returns (address receiver, uint256 royaltyAmount)", "function safeTransferFrom(address from, address to, uint256 tokenId)", "function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)", "function setApprovalForAll(address operator, bool approved)", "function setBaseExtension(string _newBaseExtension)", "function setBaseURI(string _newBaseURI)", "function setDropStart(uint256 _dropStart)", "function supportsInterface(bytes4 interfaceId) view returns (bool)", "function symbol() view returns (string)", "function tokenByIndex(uint256 index) view returns (uint256)", "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)", "function tokenURI(uint256 tokenId) view returns (string)", "function totalAssets() view returns (uint256)", "function totalSupply() view returns (uint256)", "function transferChild(uint256 tokenId, address to, uint256 destinationId, uint256 childIndex, address childAddress, uint256 childId, bool isPending, bytes data)", "function transferFrom(address from, address to, uint256 tokenId)", "function transferOwnership(address newOwner)", "function updateRoyaltyRecipient(address newRoyaltyRecipient)", "function walletOfOwner(address _owner) view returns (uint256[])", "function withdrawRaised(address to, uint256 amount)"]';

export const substrateGenericNftAbi =
  '{"spec": {"docs": [], "events": [{"args": [{"docs": [], "type": {"type": 20, "displayName": ["Option"]}, "label": "from", "indexed": true}, {"docs": [], "type": {"type": 20, "displayName": ["Option"]}, "label": "to", "indexed": true}, {"docs": [], "type": {"type": 16, "displayName": ["Id"]}, "label": "id", "indexed": true}], "docs": ["Event emitted when a token transfer occurs."], "label": "Transfer"}, {"args": [{"docs": [], "type": {"type": 0, "displayName": ["AccountId"]}, "label": "from", "indexed": true}, {"docs": [], "type": {"type": 0, "displayName": ["AccountId"]}, "label": "to", "indexed": true}, {"docs": [], "type": {"type": 21, "displayName": ["Option"]}, "label": "id", "indexed": true}, {"docs": [], "type": {"type": 23, "displayName": ["bool"]}, "label": "approved", "indexed": false}], "docs": ["Event emitted when a token approve occurs."], "label": "Approval"}], "messages": [{"args": [{"type": {"type": 1, "displayName": []}, "label": "code_hash"}], "docs": [], "label": "set_code", "default": false, "mutates": true, "payable": false, "selector": "0x694fb50f", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 0, "displayName": ["psp34_external", "TransferInput1"]}, "label": "to"}, {"type": {"type": 16, "displayName": ["psp34_external", "TransferInput2"]}, "label": "id"}, {"type": {"type": 8, "displayName": ["psp34_external", "TransferInput3"]}, "label": "data"}], "docs": [" Transfer approved or owned token from caller.", "", " On success a `Transfer` event is emitted.", "", " # Errors", "", " Returns `TokenNotExists` error if `id` does not exist.", "", " Returns `NotApproved` error if `from` doesn\'t have allowance for transferring.", "", " Returns `SafeTransferCheckFailed` error if `to` doesn\'t accept transfer."], "label": "PSP34::transfer", "default": false, "mutates": true, "payable": false, "selector": "0x3128d61b", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [" Returns current NFT total supply."], "label": "PSP34::total_supply", "default": false, "mutates": false, "payable": false, "selector": "0x628413fe", "returnType": {"type": 17, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 0, "displayName": ["psp34_external", "BalanceOfInput1"]}, "label": "owner"}], "docs": [" Returns the balance of the owner.", "", " This represents the amount of unique tokens the owner has."], "label": "PSP34::balance_of", "default": false, "mutates": false, "payable": false, "selector": "0xcde7e55f", "returnType": {"type": 18, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 16, "displayName": ["psp34_external", "OwnerOfInput1"]}, "label": "id"}], "docs": [" Returns the owner of the token if any."], "label": "PSP34::owner_of", "default": false, "mutates": false, "payable": false, "selector": "0x1168624d", "returnType": {"type": 19, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 0, "displayName": ["psp34_external", "AllowanceInput1"]}, "label": "owner"}, {"type": {"type": 0, "displayName": ["psp34_external", "AllowanceInput2"]}, "label": "operator"}, {"type": {"type": 21, "displayName": ["psp34_external", "AllowanceInput3"]}, "label": "id"}], "docs": [" Returns `true` if the operator is approved by the owner to withdraw `id` token.", " If `id` is `None`, returns `true` if the operator is approved to withdraw all owner\'s tokens."], "label": "PSP34::allowance", "default": false, "mutates": false, "payable": false, "selector": "0x4790f55a", "returnType": {"type": 22, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 0, "displayName": ["psp34_external", "ApproveInput1"]}, "label": "operator"}, {"type": {"type": 21, "displayName": ["psp34_external", "ApproveInput2"]}, "label": "id"}, {"type": {"type": 23, "displayName": ["psp34_external", "ApproveInput3"]}, "label": "approved"}], "docs": [" Approves `operator` to withdraw the `id` token from the caller\'s account.", " If `id` is `None` approves or disapproves the operator for all tokens of the caller.", "", " On success a `Approval` event is emitted.", "", " # Errors", "", " Returns `SelfApprove` error if it is self approve.", "", " Returns `NotApproved` error if caller is not owner of `id`."], "label": "PSP34::approve", "default": false, "mutates": true, "payable": false, "selector": "0x1932a8b0", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [" Returns the collection `Id` of the NFT token.", "", " This can represents the relationship between tokens/contracts/pallets."], "label": "PSP34::collection_id", "default": false, "mutates": false, "payable": false, "selector": "0xffa27a5f", "returnType": {"type": 24, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 7, "displayName": ["psp34enumerable_external", "TokenByIndexInput1"]}, "label": "index"}], "docs": [" Returns a token `Id` at a given `index` of all the tokens stored by the contract.", " Use along with `total_supply` to enumerate all tokens.", "", " The start index is zero."], "label": "PSP34Enumerable::token_by_index", "default": false, "mutates": false, "payable": false, "selector": "0xcd0340d0", "returnType": {"type": 25, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 0, "displayName": ["psp34enumerable_external", "OwnersTokenByIndexInput1"]}, "label": "owner"}, {"type": {"type": 7, "displayName": ["psp34enumerable_external", "OwnersTokenByIndexInput2"]}, "label": "index"}], "docs": [" Returns a token `Id` owned by `owner` at a given `index` of its token list.", " Use along with `balance_of` to enumerate all of ``owner``\'s tokens.", "", " The start index is zero."], "label": "PSP34Enumerable::owners_token_by_index", "default": false, "mutates": false, "payable": false, "selector": "0x3bcfb511", "returnType": {"type": 25, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 16, "displayName": ["psp34metadata_external", "GetAttributeInput1"]}, "label": "id"}, {"type": {"type": 8, "displayName": ["psp34metadata_external", "GetAttributeInput2"]}, "label": "key"}], "docs": [" Returns the attribute of `id` for the given `key`.", "", " If `id` is a collection id of the token, it returns attributes for collection."], "label": "PSP34Metadata::get_attribute", "default": false, "mutates": false, "payable": false, "selector": "0xf19d48d1", "returnType": {"type": 27, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 0, "displayName": ["ownable_external", "TransferOwnershipInput1"]}, "label": "new_owner"}], "docs": [" Transfers ownership of the contract to a `new_owner`.", " Can only be called by the current owner.", "", " On success a `OwnershipTransferred` event is emitted.", "", " # Errors", "", " Panics with `CallerIsNotOwner` error if caller is not owner.", "", " Panics with `NewOwnerIsZero` error if new owner\'s address is zero."], "label": "Ownable::transfer_ownership", "default": false, "mutates": true, "payable": false, "selector": "0x11f43efd", "returnType": {"type": 29, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [" Returns the address of the current owner."], "label": "Ownable::owner", "default": false, "mutates": false, "payable": false, "selector": "0x4fa43c8c", "returnType": {"type": 32, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [" Leaves the contract without owner. It will not be possible to call", " owner\'s functions anymore. Can only be called by the current owner.", "", " NOTE: Renouncing ownership will leave the contract without an owner,", " thereby removing any functionality that is only available to the owner.", "", " On success a `OwnershipTransferred` event is emitted.", "", " # Errors", "", " Panics with `CallerIsNotOwner` error if caller is not owner"], "label": "Ownable::renounce_ownership", "default": false, "mutates": true, "payable": false, "selector": "0x5e228753", "returnType": {"type": 29, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 0, "displayName": ["psp34burnable_external", "BurnInput1"]}, "label": "account"}, {"type": {"type": 16, "displayName": ["psp34burnable_external", "BurnInput2"]}, "label": "id"}], "docs": [" Destroys token with id equal to `id` from `account`", "", " Caller must be approved to transfer tokens from `account`", " or to transfer token with `id`"], "label": "PSP34Burnable::burn", "default": false, "mutates": true, "payable": false, "selector": "0x63c9877a", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 0, "displayName": ["launchpad_external", "GetAccountPresaleMintingAmountInput1"]}, "label": "account_id"}], "docs": [], "label": "Launchpad::get_account_presale_minting_amount", "default": false, "mutates": false, "payable": false, "selector": "0x2d1251f8", "returnType": {"type": 33, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [], "label": "Launchpad::get_project_treasury_address", "default": false, "mutates": false, "payable": false, "selector": "0x445e071f", "returnType": {"type": 32, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [], "label": "Launchpad::get_prepresale_start_at", "default": false, "mutates": false, "payable": false, "selector": "0xdebdc3ea", "returnType": {"type": 34, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [" Mint next available token for the caller"], "label": "Launchpad::mint_next", "default": false, "mutates": true, "payable": true, "selector": "0xf02a61f2", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [" Withdraw funds to contract owner"], "label": "Launchpad::withdraw_launchpad", "default": false, "mutates": true, "payable": false, "selector": "0xce9a9645", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [], "label": "Launchpad::get_public_sale_end_at", "default": false, "mutates": false, "payable": false, "selector": "0xf551d63f", "returnType": {"type": 33, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 0, "displayName": ["launchpad_external", "AddAccountToPresaleInput1"]}, "label": "account_id"}, {"type": {"type": 6, "displayName": ["launchpad_external", "AddAccountToPresaleInput2"]}, "label": "mint_amount"}], "docs": [], "label": "Launchpad::add_account_to_presale", "default": false, "mutates": true, "payable": false, "selector": "0xcd63a694", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [" Get token price"], "label": "Launchpad::price", "default": false, "mutates": false, "payable": false, "selector": "0xbfb4e0e0", "returnType": {"type": 17, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 0, "displayName": ["launchpad_external", "MintInput1"]}, "label": "to"}, {"type": {"type": 6, "displayName": ["launchpad_external", "MintInput2"]}, "label": "mint_amount"}], "docs": [" Mint one or more tokens"], "label": "Launchpad::mint", "default": false, "mutates": true, "payable": true, "selector": "0x339a1f14", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [], "label": "Launchpad::get_available_to_withdraw_launchpad", "default": false, "mutates": false, "payable": false, "selector": "0x404d2f60", "returnType": {"type": 17, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 6, "displayName": ["launchpad_external", "SetMaxMintAmountInput1"]}, "label": "max_amount"}], "docs": [" Set max number of tokens which could be minted per call"], "label": "Launchpad::set_max_mint_amount", "default": false, "mutates": true, "payable": false, "selector": "0x7bcbcd9b", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [" Get max supply of tokens"], "label": "Launchpad::max_supply", "default": false, "mutates": false, "payable": false, "selector": "0xcfff8196", "returnType": {"type": 34, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [], "label": "Launchpad::get_launchpad_fee", "default": false, "mutates": false, "payable": false, "selector": "0x20363824", "returnType": {"type": 17, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [" Get max number of tokens which could be minted per call"], "label": "Launchpad::get_max_mint_amount", "default": false, "mutates": true, "payable": false, "selector": "0xf6196c55", "returnType": {"type": 34, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 35, "displayName": ["launchpad_external", "AddAccountToPrepresaleBatchInput1"]}, "label": "account_id_mint_amounts"}], "docs": [], "label": "Launchpad::add_account_to_prepresale_batch", "default": false, "mutates": true, "payable": false, "selector": "0x86e0adc1", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 37, "displayName": ["launchpad_external", "SetMintingStatusInput1"]}, "label": "minting_status_index"}], "docs": [], "label": "Launchpad::set_minting_status", "default": false, "mutates": true, "payable": false, "selector": "0x7599a8f7", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 0, "displayName": ["launchpad_external", "MintProjectInput1"]}, "label": "to"}, {"type": {"type": 6, "displayName": ["launchpad_external", "MintProjectInput2"]}, "label": "mint_amount"}], "docs": [" Mint for project treasury"], "label": "Launchpad::mint_project", "default": false, "mutates": true, "payable": false, "selector": "0x3c6f9626", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [], "label": "Launchpad::get_minting_status", "default": false, "mutates": false, "payable": false, "selector": "0x68375362", "returnType": {"type": 38, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [" Get token price presale"], "label": "Launchpad::presale_price", "default": false, "mutates": false, "payable": false, "selector": "0x24399466", "returnType": {"type": 17, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [], "label": "Launchpad::get_launchpad_treasury_address", "default": false, "mutates": false, "payable": false, "selector": "0x9c1fefc1", "returnType": {"type": 32, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [" Get token price presale"], "label": "Launchpad::prepresale_price", "default": false, "mutates": false, "payable": false, "selector": "0x22195d3a", "returnType": {"type": 17, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 0, "displayName": ["launchpad_external", "AddAccountToPrepresaleInput1"]}, "label": "account_id"}, {"type": {"type": 6, "displayName": ["launchpad_external", "AddAccountToPrepresaleInput2"]}, "label": "mint_amount"}], "docs": [], "label": "Launchpad::add_account_to_prepresale", "default": false, "mutates": true, "payable": false, "selector": "0x7253a5b3", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 0, "displayName": ["launchpad_external", "GetAccountPrepresaleMintingAmountInput1"]}, "label": "account_id"}], "docs": [], "label": "Launchpad::get_account_prepresale_minting_amount", "default": false, "mutates": false, "payable": false, "selector": "0x9f1bfa9b", "returnType": {"type": 33, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [], "label": "Launchpad::get_available_to_withdraw_project", "default": false, "mutates": false, "payable": false, "selector": "0x6eb500e3", "returnType": {"type": 17, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 35, "displayName": ["launchpad_external", "AddAccountToPresaleBatchInput1"]}, "label": "account_id_mint_amounts"}], "docs": [], "label": "Launchpad::add_account_to_presale_batch", "default": false, "mutates": true, "payable": false, "selector": "0x9a9565fb", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [" Withdraw funds to launchpad project"], "label": "Launchpad::withdraw_project", "default": false, "mutates": true, "payable": false, "selector": "0x8d797984", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [], "label": "Launchpad::get_presale_start_at", "default": false, "mutates": false, "payable": false, "selector": "0x573d72cf", "returnType": {"type": 34, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [], "label": "Launchpad::get_public_sale_start_at", "default": false, "mutates": false, "payable": false, "selector": "0x9785e5ad", "returnType": {"type": 34, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 6, "displayName": ["psp34traits_external", "TokenUriInput1"]}, "label": "token_id"}], "docs": [" Get URI from token ID"], "label": "Psp34Traits::token_uri", "default": false, "mutates": false, "payable": false, "selector": "0x249dfd4f", "returnType": {"type": 39, "displayName": ["ink", "MessageResult"]}}, {"args": [], "docs": [" This function return how many unique attributes in the contract"], "label": "Psp34Traits::get_attribute_count", "default": false, "mutates": false, "payable": false, "selector": "0x61c50d69", "returnType": {"type": 18, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 40, "displayName": ["psp34traits_external", "SetBaseExtensionInput1"]}, "label": "uri"}], "docs": [], "label": "Psp34Traits::set_base_extension", "default": false, "mutates": true, "payable": false, "selector": "0xb4a91f82", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 16, "displayName": ["psp34traits_external", "SetMultipleAttributesInput1"]}, "label": "token_id"}, {"type": {"type": 41, "displayName": ["psp34traits_external", "SetMultipleAttributesInput2"]}, "label": "metadata"}], "docs": [], "label": "Psp34Traits::set_multiple_attributes", "default": false, "mutates": true, "payable": false, "selector": "0x5bf8416b", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 5, "displayName": ["psp34traits_external", "GetAttributeNameInput1"]}, "label": "index"}], "docs": [" This function return the attribute name using attribute index. Beacause attributes of an NFT can be set to anything by Contract Owner, AztZero uses this function to get all attributes of an NFT"], "label": "Psp34Traits::get_attribute_name", "default": false, "mutates": false, "payable": false, "selector": "0xfcfe34de", "returnType": {"type": 39, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 40, "displayName": ["psp34traits_external", "SetBaseUriInput1"]}, "label": "uri"}], "docs": [" Set new value for the baseUri"], "label": "Psp34Traits::set_base_uri", "default": false, "mutates": true, "payable": false, "selector": "0x4de6850b", "returnType": {"type": 13, "displayName": ["ink", "MessageResult"]}}, {"args": [{"type": {"type": 16, "displayName": ["psp34traits_external", "GetAttributesInput1"]}, "label": "token_id"}, {"type": {"type": 43, "displayName": ["psp34traits_external", "GetAttributesInput2"]}, "label": "attributes"}], "docs": [" This function returns all available attributes of each NFT"], "label": "Psp34Traits::get_attributes", "default": false, "mutates": false, "payable": false, "selector": "0x18209102", "returnType": {"type": 44, "displayName": ["ink", "MessageResult"]}}], "lang_error": {"type": 12, "displayName": ["ink", "LangError"]}, "environment": {"hash": {"type": 45, "displayName": ["Hash"]}, "balance": {"type": 7, "displayName": ["Balance"]}, "accountId": {"type": 0, "displayName": ["AccountId"]}, "timestamp": {"type": 6, "displayName": ["Timestamp"]}, "blockNumber": {"type": 5, "displayName": ["BlockNumber"]}, "chainExtension": {"type": 46, "displayName": ["ChainExtension"]}, "maxEventTopics": 4}, "constructors": [{"args": [{"type": {"type": 8, "displayName": ["String"]}, "label": "name"}, {"type": {"type": 8, "displayName": ["String"]}, "label": "symbol"}, {"type": {"type": 8, "displayName": ["String"]}, "label": "base_uri"}, {"type": {"type": 8, "displayName": ["String"]}, "label": "base_extension"}, {"type": {"type": 6, "displayName": ["u64"]}, "label": "max_supply"}, {"type": {"type": 7, "displayName": ["Balance"]}, "label": "prepresale_price_per_mint"}, {"type": {"type": 7, "displayName": ["Balance"]}, "label": "presale_price_per_mint"}, {"type": {"type": 7, "displayName": ["Balance"]}, "label": "price_per_mint"}, {"type": {"type": 6, "displayName": ["u64"]}, "label": "prepresale_start_at"}, {"type": {"type": 6, "displayName": ["u64"]}, "label": "presale_start_at"}, {"type": {"type": 6, "displayName": ["u64"]}, "label": "public_sale_start_at"}, {"type": {"type": 10, "displayName": ["Option"]}, "label": "public_sale_end_at"}, {"type": {"type": 7, "displayName": ["Percentage"]}, "label": "launchpad_fee"}, {"type": {"type": 0, "displayName": ["AccountId"]}, "label": "project_treasury"}, {"type": {"type": 0, "displayName": ["AccountId"]}, "label": "launchpad_treasury"}], "docs": [], "label": "new", "default": false, "payable": false, "selector": "0x9bae9d5e", "returnType": {"type": 11, "displayName": ["ink_primitives", "ConstructorResult"]}}]}, "types": [{"id": 0, "type": {"def": {"composite": {"fields": [{"type": 1, "typeName": "[u8; 32]"}]}}, "path": ["ink_primitives", "types", "AccountId"]}}, {"id": 1, "type": {"def": {"array": {"len": 32, "type": 2}}}}, {"id": 2, "type": {"def": {"primitive": "u8"}}}, {"id": 3, "type": {"def": {"tuple": []}}}, {"id": 4, "type": {"def": {"primitive": "u16"}}}, {"id": 5, "type": {"def": {"primitive": "u32"}}}, {"id": 6, "type": {"def": {"primitive": "u64"}}}, {"id": 7, "type": {"def": {"primitive": "u128"}}}, {"id": 8, "type": {"def": {"sequence": {"type": 2}}}}, {"id": 9, "type": {"def": {"sequence": {"type": 4}}}}, {"id": 10, "type": {"def": {"variant": {"variants": [{"name": "None", "index": 0}, {"name": "Some", "index": 1, "fields": [{"type": 6}]}]}}, "path": ["Option"], "params": [{"name": "T", "type": 6}]}}, {"id": 11, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 3}]}, {"name": "Err", "index": 1, "fields": [{"type": 12}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 3}, {"name": "E", "type": 12}]}}, {"id": 12, "type": {"def": {"variant": {"variants": [{"name": "CouldNotReadInput", "index": 1}]}}, "path": ["ink_primitives", "LangError"]}}, {"id": 13, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 14}]}, {"name": "Err", "index": 1, "fields": [{"type": 12}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 14}, {"name": "E", "type": 12}]}}, {"id": 14, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 3}]}, {"name": "Err", "index": 1, "fields": [{"type": 15}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 3}, {"name": "E", "type": 15}]}}, {"id": 15, "type": {"def": {"variant": {"variants": [{"name": "Custom", "index": 0, "fields": [{"type": 8, "typeName": "String"}]}, {"name": "SelfApprove", "index": 1}, {"name": "NotApproved", "index": 2}, {"name": "TokenExists", "index": 3}, {"name": "TokenNotExists", "index": 4}, {"name": "SafeTransferCheckFailed", "index": 5, "fields": [{"type": 8, "typeName": "String"}]}]}}, "path": ["openbrush_contracts", "traits", "errors", "psp34", "PSP34Error"]}}, {"id": 16, "type": {"def": {"variant": {"variants": [{"name": "U8", "index": 0, "fields": [{"type": 2, "typeName": "u8"}]}, {"name": "U16", "index": 1, "fields": [{"type": 4, "typeName": "u16"}]}, {"name": "U32", "index": 2, "fields": [{"type": 5, "typeName": "u32"}]}, {"name": "U64", "index": 3, "fields": [{"type": 6, "typeName": "u64"}]}, {"name": "U128", "index": 4, "fields": [{"type": 7, "typeName": "u128"}]}, {"name": "Bytes", "index": 5, "fields": [{"type": 8, "typeName": "Vec<u8>"}]}]}}, "path": ["openbrush_contracts", "traits", "types", "Id"]}}, {"id": 17, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 7}]}, {"name": "Err", "index": 1, "fields": [{"type": 12}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 7}, {"name": "E", "type": 12}]}}, {"id": 18, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 5}]}, {"name": "Err", "index": 1, "fields": [{"type": 12}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 5}, {"name": "E", "type": 12}]}}, {"id": 19, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 20}]}, {"name": "Err", "index": 1, "fields": [{"type": 12}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 20}, {"name": "E", "type": 12}]}}, {"id": 20, "type": {"def": {"variant": {"variants": [{"name": "None", "index": 0}, {"name": "Some", "index": 1, "fields": [{"type": 0}]}]}}, "path": ["Option"], "params": [{"name": "T", "type": 0}]}}, {"id": 21, "type": {"def": {"variant": {"variants": [{"name": "None", "index": 0}, {"name": "Some", "index": 1, "fields": [{"type": 16}]}]}}, "path": ["Option"], "params": [{"name": "T", "type": 16}]}}, {"id": 22, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 23}]}, {"name": "Err", "index": 1, "fields": [{"type": 12}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 23}, {"name": "E", "type": 12}]}}, {"id": 23, "type": {"def": {"primitive": "bool"}}}, {"id": 24, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 16}]}, {"name": "Err", "index": 1, "fields": [{"type": 12}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 16}, {"name": "E", "type": 12}]}}, {"id": 25, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 26}]}, {"name": "Err", "index": 1, "fields": [{"type": 12}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 26}, {"name": "E", "type": 12}]}}, {"id": 26, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 16}]}, {"name": "Err", "index": 1, "fields": [{"type": 15}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 16}, {"name": "E", "type": 15}]}}, {"id": 27, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 28}]}, {"name": "Err", "index": 1, "fields": [{"type": 12}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 28}, {"name": "E", "type": 12}]}}, {"id": 28, "type": {"def": {"variant": {"variants": [{"name": "None", "index": 0}, {"name": "Some", "index": 1, "fields": [{"type": 8}]}]}}, "path": ["Option"], "params": [{"name": "T", "type": 8}]}}, {"id": 29, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 30}]}, {"name": "Err", "index": 1, "fields": [{"type": 12}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 30}, {"name": "E", "type": 12}]}}, {"id": 30, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 3}]}, {"name": "Err", "index": 1, "fields": [{"type": 31}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 3}, {"name": "E", "type": 31}]}}, {"id": 31, "type": {"def": {"variant": {"variants": [{"name": "CallerIsNotOwner", "index": 0}, {"name": "NewOwnerIsZero", "index": 1}]}}, "path": ["openbrush_contracts", "traits", "errors", "ownable", "OwnableError"]}}, {"id": 32, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 0}]}, {"name": "Err", "index": 1, "fields": [{"type": 12}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 0}, {"name": "E", "type": 12}]}}, {"id": 33, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 10}]}, {"name": "Err", "index": 1, "fields": [{"type": 12}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 10}, {"name": "E", "type": 12}]}}, {"id": 34, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 6}]}, {"name": "Err", "index": 1, "fields": [{"type": 12}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 6}, {"name": "E", "type": 12}]}}, {"id": 35, "type": {"def": {"sequence": {"type": 36}}}}, {"id": 36, "type": {"def": {"tuple": [0, 6]}}}, {"id": 37, "type": {"def": {"variant": {"variants": [{"name": "None", "index": 0}, {"name": "Some", "index": 1, "fields": [{"type": 2}]}]}}, "path": ["Option"], "params": [{"name": "T", "type": 2}]}}, {"id": 38, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 8}]}, {"name": "Err", "index": 1, "fields": [{"type": 12}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 8}, {"name": "E", "type": 12}]}}, {"id": 39, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 40}]}, {"name": "Err", "index": 1, "fields": [{"type": 12}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 40}, {"name": "E", "type": 12}]}}, {"id": 40, "type": {"def": {"primitive": "str"}}}, {"id": 41, "type": {"def": {"sequence": {"type": 42}}}}, {"id": 42, "type": {"def": {"tuple": [40, 40]}}}, {"id": 43, "type": {"def": {"sequence": {"type": 40}}}}, {"id": 44, "type": {"def": {"variant": {"variants": [{"name": "Ok", "index": 0, "fields": [{"type": 43}]}, {"name": "Err", "index": 1, "fields": [{"type": 12}]}]}}, "path": ["Result"], "params": [{"name": "T", "type": 43}, {"name": "E", "type": 12}]}}, {"id": 45, "type": {"def": {"composite": {"fields": [{"type": 1, "typeName": "[u8; 32]"}]}}, "path": ["ink_primitives", "types", "Hash"]}}, {"id": 46, "type": {"def": {"variant": {}}, "path": ["ink_env", "types", "NoChainExtension"]}}], "source": {"hash": "0xf6dc1015b6378830bf5fbc119bba883e2047ae3d5cc76db16cb9eae387059e44", "compiler": "rustc 1.70.0-nightly", "language": "ink! 4.3.0", "build_info": {"build_mode": "Release", "rust_toolchain": "nightly-x86_64-unknown-linux-gnu", "wasm_opt_settings": {"keep_debug_symbols": false, "optimization_passes": "Z"}, "cargo_contract_version": "3.2.0"}}, "storage": {"root": {"layout": {"struct": {"name": "ParasLaunchpadContract", "fields": [{"name": "psp34", "layout": {"struct": {"name": "Data", "fields": [{"name": "token_owner", "layout": {"root": {"layout": {"leaf": {"ty": 0, "key": "0x1cc80634"}}, "root_key": "0x1cc80634"}}}, {"name": "operator_approvals", "layout": {"root": {"layout": {"leaf": {"ty": 3, "key": "0x7e3fae6b"}}, "root_key": "0x7e3fae6b"}}}, {"name": "balances", "layout": {"struct": {"name": "Balances", "fields": [{"name": "enumerable", "layout": {"root": {"layout": {"enum": {"name": "Id", "variants": {"0": {"name": "U8", "fields": [{"name": "0", "layout": {"leaf": {"ty": 2, "key": "0xca32a240"}}}]}, "1": {"name": "U16", "fields": [{"name": "0", "layout": {"leaf": {"ty": 4, "key": "0xca32a240"}}}]}, "2": {"name": "U32", "fields": [{"name": "0", "layout": {"leaf": {"ty": 5, "key": "0xca32a240"}}}]}, "3": {"name": "U64", "fields": [{"name": "0", "layout": {"leaf": {"ty": 6, "key": "0xca32a240"}}}]}, "4": {"name": "U128", "fields": [{"name": "0", "layout": {"leaf": {"ty": 7, "key": "0xca32a240"}}}]}, "5": {"name": "Bytes", "fields": [{"name": "0", "layout": {"leaf": {"ty": 8, "key": "0xca32a240"}}}]}}, "dispatchKey": "0xca32a240"}}, "root_key": "0xca32a240"}}}, {"name": "_reserved", "layout": {"enum": {"name": "Option", "variants": {"0": {"name": "None", "fields": []}, "1": {"name": "Some", "fields": [{"name": "0", "layout": {"leaf": {"ty": 3, "key": "0x00000000"}}}]}}, "dispatchKey": "0x00000000"}}}]}}}, {"name": "_reserved", "layout": {"enum": {"name": "Option", "variants": {"0": {"name": "None", "fields": []}, "1": {"name": "Some", "fields": [{"name": "0", "layout": {"leaf": {"ty": 3, "key": "0x00000000"}}}]}}, "dispatchKey": "0x00000000"}}}]}}}, {"name": "ownable", "layout": {"struct": {"name": "Data", "fields": [{"name": "owner", "layout": {"leaf": {"ty": 0, "key": "0x00000000"}}}, {"name": "_reserved", "layout": {"enum": {"name": "Option", "variants": {"0": {"name": "None", "fields": []}, "1": {"name": "Some", "fields": [{"name": "0", "layout": {"leaf": {"ty": 3, "key": "0x00000000"}}}]}}, "dispatchKey": "0x00000000"}}}]}}}, {"name": "metadata", "layout": {"struct": {"name": "Data", "fields": [{"name": "attributes", "layout": {"root": {"layout": {"leaf": {"ty": 8, "key": "0x9b2d2382"}}, "root_key": "0x9b2d2382"}}}, {"name": "_reserved", "layout": {"enum": {"name": "Option", "variants": {"0": {"name": "None", "fields": []}, "1": {"name": "Some", "fields": [{"name": "0", "layout": {"leaf": {"ty": 3, "key": "0x00000000"}}}]}}, "dispatchKey": "0x00000000"}}}]}}}, {"name": "launchpad", "layout": {"struct": {"name": "Data", "fields": [{"name": "collection_id", "layout": {"leaf": {"ty": 5, "key": "0x00000000"}}}, {"name": "max_supply", "layout": {"leaf": {"ty": 6, "key": "0x00000000"}}}, {"name": "price_per_mint", "layout": {"leaf": {"ty": 7, "key": "0x00000000"}}}, {"name": "max_amount", "layout": {"leaf": {"ty": 6, "key": "0x00000000"}}}, {"name": "token_set", "layout": {"leaf": {"ty": 9, "key": "0x00000000"}}}, {"name": "pseudo_random_salt", "layout": {"leaf": {"ty": 6, "key": "0x00000000"}}}, {"name": "forced_minting_status", "layout": {"enum": {"name": "Option", "variants": {"0": {"name": "None", "fields": []}, "1": {"name": "Some", "fields": [{"name": "0", "layout": {"leaf": {"ty": 2, "key": "0x00000000"}}}]}}, "dispatchKey": "0x00000000"}}}, {"name": "public_sale_start_at", "layout": {"leaf": {"ty": 6, "key": "0x00000000"}}}, {"name": "public_sale_end_at", "layout": {"enum": {"name": "Option", "variants": {"0": {"name": "None", "fields": []}, "1": {"name": "Some", "fields": [{"name": "0", "layout": {"leaf": {"ty": 6, "key": "0x00000000"}}}]}}, "dispatchKey": "0x00000000"}}}, {"name": "prepresale_start_at", "layout": {"leaf": {"ty": 6, "key": "0x00000000"}}}, {"name": "prepresale_price_per_mint", "layout": {"leaf": {"ty": 7, "key": "0x00000000"}}}, {"name": "prepresale_whitelisted", "layout": {"root": {"layout": {"leaf": {"ty": 6, "key": "0x1d90320a"}}, "root_key": "0x1d90320a"}}}, {"name": "presale_start_at", "layout": {"leaf": {"ty": 6, "key": "0x00000000"}}}, {"name": "presale_price_per_mint", "layout": {"leaf": {"ty": 7, "key": "0x00000000"}}}, {"name": "presale_whitelisted", "layout": {"root": {"layout": {"leaf": {"ty": 6, "key": "0x79a7901b"}}, "root_key": "0x79a7901b"}}}, {"name": "minting_type_for_token", "layout": {"root": {"layout": {"leaf": {"ty": 2, "key": "0xc5f56d89"}}, "root_key": "0xc5f56d89"}}}, {"name": "total_sales", "layout": {"leaf": {"ty": 7, "key": "0x00000000"}}}, {"name": "withdrawn_sales_project", "layout": {"leaf": {"ty": 7, "key": "0x00000000"}}}, {"name": "withdrawn_sales_launchpad", "layout": {"leaf": {"ty": 7, "key": "0x00000000"}}}, {"name": "launchpad_fee", "layout": {"leaf": {"ty": 7, "key": "0x00000000"}}}, {"name": "project_treasury", "layout": {"enum": {"name": "Option", "variants": {"0": {"name": "None", "fields": []}, "1": {"name": "Some", "fields": [{"name": "0", "layout": {"leaf": {"ty": 0, "key": "0x00000000"}}}]}}, "dispatchKey": "0x00000000"}}}, {"name": "launchpad_treasury", "layout": {"enum": {"name": "Option", "variants": {"0": {"name": "None", "fields": []}, "1": {"name": "Some", "fields": [{"name": "0", "layout": {"leaf": {"ty": 0, "key": "0x00000000"}}}]}}, "dispatchKey": "0x00000000"}}}, {"name": "attribute_count", "layout": {"leaf": {"ty": 5, "key": "0x00000000"}}}, {"name": "attribute_names", "layout": {"root": {"layout": {"leaf": {"ty": 8, "key": "0x8bf87035"}}, "root_key": "0x8bf87035"}}}]}}}]}}, "root_key": "0x00000000"}}, "version": "4", "contract": {"name": "paras_launchpad", "authors": ["Paras <dev@paras.id>"], "version": "0.3.0"}}';
